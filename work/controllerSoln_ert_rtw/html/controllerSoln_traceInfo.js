function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "controllerSoln"};
	this.sidHashMap["controllerSoln"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "controllerSoln:34"};
	this.sidHashMap["controllerSoln:34"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "controllerSoln:39"};
	this.sidHashMap["controllerSoln:39"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/Desired"] = {sid: "controllerSoln:68"};
	this.sidHashMap["controllerSoln:68"] = {rtwname: "<Root>/Desired"};
	this.rtwnameHashMap["<Root>/Actual"] = {sid: "controllerSoln:67"};
	this.sidHashMap["controllerSoln:67"] = {rtwname: "<Root>/Actual"};
	this.rtwnameHashMap["<Root>/Controller"] = {sid: "controllerSoln:34"};
	this.sidHashMap["controllerSoln:34"] = {rtwname: "<Root>/Controller"};
	this.rtwnameHashMap["<Root>/Display"] = {sid: "controllerSoln:74"};
	this.sidHashMap["controllerSoln:74"] = {rtwname: "<Root>/Display"};
	this.rtwnameHashMap["<Root>/ControlOut"] = {sid: "controllerSoln:71"};
	this.sidHashMap["controllerSoln:71"] = {rtwname: "<Root>/ControlOut"};
	this.rtwnameHashMap["<S1>/DesiredAngle"] = {sid: "controllerSoln:35"};
	this.sidHashMap["controllerSoln:35"] = {rtwname: "<S1>/DesiredAngle"};
	this.rtwnameHashMap["<S1>/ActualAngle"] = {sid: "controllerSoln:36"};
	this.sidHashMap["controllerSoln:36"] = {rtwname: "<S1>/ActualAngle"};
	this.rtwnameHashMap["<S1>/Discrete PID Controller"] = {sid: "controllerSoln:39"};
	this.sidHashMap["controllerSoln:39"] = {rtwname: "<S1>/Discrete PID Controller"};
	this.rtwnameHashMap["<S1>/Sum"] = {sid: "controllerSoln:63"};
	this.sidHashMap["controllerSoln:63"] = {rtwname: "<S1>/Sum"};
	this.rtwnameHashMap["<S1>/Out"] = {sid: "controllerSoln:65"};
	this.sidHashMap["controllerSoln:65"] = {rtwname: "<S1>/Out"};
	this.rtwnameHashMap["<S2>/u"] = {sid: "controllerSoln:39:1"};
	this.sidHashMap["controllerSoln:39:1"] = {rtwname: "<S2>/u"};
	this.rtwnameHashMap["<S2>/Derivative Gain"] = {sid: "controllerSoln:39:1690"};
	this.sidHashMap["controllerSoln:39:1690"] = {rtwname: "<S2>/Derivative Gain"};
	this.rtwnameHashMap["<S2>/Filter"] = {sid: "controllerSoln:39:1692"};
	this.sidHashMap["controllerSoln:39:1692"] = {rtwname: "<S2>/Filter"};
	this.rtwnameHashMap["<S2>/Filter Coefficient"] = {sid: "controllerSoln:39:1693"};
	this.sidHashMap["controllerSoln:39:1693"] = {rtwname: "<S2>/Filter Coefficient"};
	this.rtwnameHashMap["<S2>/Integral Gain"] = {sid: "controllerSoln:39:1689"};
	this.sidHashMap["controllerSoln:39:1689"] = {rtwname: "<S2>/Integral Gain"};
	this.rtwnameHashMap["<S2>/Integrator"] = {sid: "controllerSoln:39:1691"};
	this.sidHashMap["controllerSoln:39:1691"] = {rtwname: "<S2>/Integrator"};
	this.rtwnameHashMap["<S2>/Proportional Gain"] = {sid: "controllerSoln:39:1688"};
	this.sidHashMap["controllerSoln:39:1688"] = {rtwname: "<S2>/Proportional Gain"};
	this.rtwnameHashMap["<S2>/Saturate"] = {sid: "controllerSoln:39:1695"};
	this.sidHashMap["controllerSoln:39:1695"] = {rtwname: "<S2>/Saturate"};
	this.rtwnameHashMap["<S2>/Sum"] = {sid: "controllerSoln:39:1687"};
	this.sidHashMap["controllerSoln:39:1687"] = {rtwname: "<S2>/Sum"};
	this.rtwnameHashMap["<S2>/SumD"] = {sid: "controllerSoln:39:1694"};
	this.sidHashMap["controllerSoln:39:1694"] = {rtwname: "<S2>/SumD"};
	this.rtwnameHashMap["<S2>/y"] = {sid: "controllerSoln:39:10"};
	this.sidHashMap["controllerSoln:39:10"] = {rtwname: "<S2>/y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
